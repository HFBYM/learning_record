git bash Linux风格 git cmd Windows风格 git gui 图形化设计		
Linux指令:
	cd 改变目录 cd ..回退目录 pwd得到当前目录 clear清屏 ls列出当前目录所有文件 touch 新建文件 rm 移除文件
	mkdir 创建文件夹 rm -r 删除文件夹 mv a b 把a移动到b 对同一个目录下的可以重命名 history 查看历史命令 help 帮助 exit退出
Git 指令：
		git config -l 列举所有配置			-短命令 --长命令
		首次安装配置:		(git global -e --global)	创造配置文件
						git config --global user.name "Clare"
						it config --global user.email "10090535708@qq.com"
	系统级配置在git安装文件里		本地的全局配置在自己的用户里面
	可以在用户目录下面创建.bashrc文件 在里面写上别名

创建本地仓库两种方式: 1. git clone (GitHub上的地址)	2. git init
	git status 查看当前目录状态
	git add abc.txt 放入暂存区 git add .	将全部文件放入暂存区
	git commit -m "备注"		将暂存区中的全部发到本地仓库

有时候不需要把一些版本纳入版本控制中 在主文件目录下创建.gitingnore 让git忽略特定文件 规则如下：
	1. #为注释	2.*.txt 忽略.txt文件 *指代任意字符	3.！lib.txt	表示例外规则		4./temp 保留temp目录下	5.build/ 忽略build目录下

	git log 得到提交日志  加上--stat 查看具体修改的哪些文件	 -all 显示所有分支 -graph 以图的方式 -pretty=oneline一行 -abbrev-commit令id简短
	git relog可以查看所用提交
	git diff 加上commit id 可以查看这次提交更改了什么内容	//esc :wq退出
	git reset --hard 加上commit id	跳转到某个节点  选中即复制 滚轮点击即粘贴

分支使用：
	git branch 查看当前项目的分支和当前正在使用的分支	-r 查看远程分支	直接加分支名可以创建分支
	git checkout 切换到分支 -b develop 创建一个develop分支并切换到 这个分支会复制母支的提交 		-d 删除分支	-dr 删除远程分支
	在master分支上使用 git merge develop合并分支